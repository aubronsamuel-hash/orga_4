name: backend-tests
on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend_tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend_tests.yml'
jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Locate init_repo.ps1
        id: find_init
        shell: bash
        run: |
          set -euo pipefail
          echo "Workspace: $GITHUB_WORKSPACE"
          # Lister pour debug
          ls -la
          # Trouver un chemin de type */PS1/init_repo.ps1 versionnee par git
          FOUND="$(git ls-files | grep -E '(^|/)PS1/init_repo\.ps1$' || true)"
          if [ -n "$FOUND" ]; then
            echo "Found: $FOUND"
            echo "init=$FOUND" >> "$GITHUB_OUTPUT"
          else
            echo "No PS1/init_repo.ps1 found. Skipping."
            echo "init=" >> "$GITHUB_OUTPUT"
          fi

      - name: Run init_repo.ps1
        if: ${{ steps.find_init.outputs.init != '' }}
        shell: pwsh
        run: |
          $path = Join-Path "${{ github.workspace }}" "${{ steps.find_init.outputs.init }}"
          Write-Host "Running $path -Verbose"
          # Normaliser eventuelles fins de lignes CRLF/LF si besoin:
          # (Get-Content -Raw $path) -replace "`r`n","`n" | Set-Content -NoNewline $path
          & $path -Verbose
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install test deps
        run: |
          set -e
          if [ -f "backend/requirements-dev.txt" ]; then
            pip install -r backend/requirements-dev.txt
          elif [ -f "backend/requirements.txt" ]; then
            pip install -r backend/requirements.txt
            pip install pytest pytest-cov
          elif [ -f "backend/pyproject.toml" ]; then
            if command -v pipx >/dev/null 2>&1; then pipx install poetry || true; fi
            if ! command -v poetry >/dev/null 2>&1; then pip install poetry; fi
            poetry install
            (poetry add -G dev pytest pytest-cov) || (poetry add --group dev pytest pytest-cov)
          else
            pip install pytest pytest-cov
          fi
      - name: Run pytest
        working-directory: backend
        run: |
          pytest --cov=app --cov-report=term-missing --cov-fail-under=90
